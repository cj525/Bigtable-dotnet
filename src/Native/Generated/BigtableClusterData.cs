// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/bigtable/admin/cluster/v1/bigtable_cluster_data.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Bigtable.Admin.Cluster.V1 {

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class BigtableClusterData {

    #region Descriptor
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BigtableClusterData() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cjxnb29nbGUvYmlndGFibGUvYWRtaW4vY2x1c3Rlci92MS9iaWd0YWJsZV9j", 
            "bHVzdGVyX2RhdGEucHJvdG8SIGdvb2dsZS5iaWd0YWJsZS5hZG1pbi5jbHVz", 
            "dGVyLnYxGhxnb29nbGUvYXBpL2Fubm90YXRpb25zLnByb3RvGiNnb29nbGUv", 
            "bG9uZ3J1bm5pbmcvb3BlcmF0aW9ucy5wcm90bxofZ29vZ2xlL3Byb3RvYnVm", 
            "L3RpbWVzdGFtcC5wcm90byK7AQoEWm9uZRIMCgRuYW1lGAEgASgJEhQKDGRp", 
            "c3BsYXlfbmFtZRgCIAEoCRI9CgZzdGF0dXMYAyABKA4yLS5nb29nbGUuYmln", 
            "dGFibGUuYWRtaW4uY2x1c3Rlci52MS5ab25lLlN0YXR1cyJQCgZTdGF0dXMS", 
            "CwoHVU5LTk9XThAAEgYKAk9LEAESFwoTUExBTk5FRF9NQUlOVEVOQU5DRRAC", 
            "EhgKFEVNRVJHRU5DWV9NQUlORU5BTkNFEAMi+gEKB0NsdXN0ZXISDAoEbmFt", 
            "ZRgBIAEoCRIvCgtkZWxldGVfdGltZRgCIAEoCzIaLmdvb2dsZS5wcm90b2J1", 
            "Zi5UaW1lc3RhbXASOAoRY3VycmVudF9vcGVyYXRpb24YAyABKAsyHS5nb29n", 
            "bGUubG9uZ3J1bm5pbmcuT3BlcmF0aW9uEhQKDGRpc3BsYXlfbmFtZRgEIAEo", 
            "CRITCgtzZXJ2ZV9ub2RlcxgFIAEoBRJLChRkZWZhdWx0X3N0b3JhZ2VfdHlw", 
            "ZRgIIAEoDjItLmdvb2dsZS5iaWd0YWJsZS5hZG1pbi5jbHVzdGVyLnYxLlN0", 
            "b3JhZ2VUeXBlKjcKC1N0b3JhZ2VUeXBlEhcKE1NUT1JBR0VfVU5TUEVDSUZJ", 
            "RUQQABIPCgtTVE9SQUdFX1NTRBABQkIKJGNvbS5nb29nbGUuYmlndGFibGUu", 
            "YWRtaW4uY2x1c3Rlci52MUIYQmlndGFibGVDbHVzdGVyRGF0YVByb3RvUAFi", 
            "BnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.Annotations.Descriptor, global::Google.Longrunning.Proto.Operations.Descriptor, global::Google.Protobuf.Proto.Timestamp.Descriptor, },
          new pbr::GeneratedCodeInfo(new[] {typeof(global::Google.Bigtable.Admin.Cluster.V1.StorageType), }, new pbr::GeneratedCodeInfo[] {
            new pbr::GeneratedCodeInfo(typeof(global::Google.Bigtable.Admin.Cluster.V1.Zone), new[]{ "Name", "DisplayName", "Status" }, null, new[]{ typeof(global::Google.Bigtable.Admin.Cluster.V1.Zone.Types.Status) }, null),
            new pbr::GeneratedCodeInfo(typeof(global::Google.Bigtable.Admin.Cluster.V1.Cluster), new[]{ "Name", "DeleteTime", "CurrentOperation", "DisplayName", "ServeNodes", "DefaultStorageType" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum StorageType {
    STORAGE_UNSPECIFIED = 0,
    STORAGE_SSD = 1,
  }

  #endregion

  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Zone : pb::IMessage<Zone> {
    private static readonly pb::MessageParser<Zone> _parser = new pb::MessageParser<Zone>(() => new Zone());
    public static pb::MessageParser<Zone> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Bigtable.Admin.Cluster.V1.BigtableClusterData.Descriptor.MessageTypes[0]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public Zone() {
      OnConstruction();
    }

    partial void OnConstruction();

    public Zone(Zone other) : this() {
      name_ = other.name_;
      displayName_ = other.displayName_;
      status_ = other.status_;
    }

    public Zone Clone() {
      return new Zone(this);
    }

    public const int NameFieldNumber = 1;
    private string name_ = "";
    public string Name {
      get { return name_; }
      set {
        name_ = pb::Preconditions.CheckNotNull(value, "value");
      }
    }

    public const int DisplayNameFieldNumber = 2;
    private string displayName_ = "";
    public string DisplayName {
      get { return displayName_; }
      set {
        displayName_ = pb::Preconditions.CheckNotNull(value, "value");
      }
    }

    public const int StatusFieldNumber = 3;
    private global::Google.Bigtable.Admin.Cluster.V1.Zone.Types.Status status_ = global::Google.Bigtable.Admin.Cluster.V1.Zone.Types.Status.UNKNOWN;
    public global::Google.Bigtable.Admin.Cluster.V1.Zone.Types.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as Zone);
    }

    public bool Equals(Zone other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (DisplayName != other.DisplayName) return false;
      if (Status != other.Status) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (DisplayName.Length != 0) hash ^= DisplayName.GetHashCode();
      if (Status != global::Google.Bigtable.Admin.Cluster.V1.Zone.Types.Status.UNKNOWN) hash ^= Status.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.Default.Format(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (DisplayName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DisplayName);
      }
      if (Status != global::Google.Bigtable.Admin.Cluster.V1.Zone.Types.Status.UNKNOWN) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Status);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (DisplayName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayName);
      }
      if (Status != global::Google.Bigtable.Admin.Cluster.V1.Zone.Types.Status.UNKNOWN) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      return size;
    }

    public void MergeFrom(Zone other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.DisplayName.Length != 0) {
        DisplayName = other.DisplayName;
      }
      if (other.Status != global::Google.Bigtable.Admin.Cluster.V1.Zone.Types.Status.UNKNOWN) {
        Status = other.Status;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            DisplayName = input.ReadString();
            break;
          }
          case 24: {
            status_ = (global::Google.Bigtable.Admin.Cluster.V1.Zone.Types.Status) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum Status {
        UNKNOWN = 0,
        OK = 1,
        PLANNED_MAINTENANCE = 2,
        EMERGENCY_MAINENANCE = 3,
      }

    }
    #endregion

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Cluster : pb::IMessage<Cluster> {
    private static readonly pb::MessageParser<Cluster> _parser = new pb::MessageParser<Cluster>(() => new Cluster());
    public static pb::MessageParser<Cluster> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Bigtable.Admin.Cluster.V1.BigtableClusterData.Descriptor.MessageTypes[1]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public Cluster() {
      OnConstruction();
    }

    partial void OnConstruction();

    public Cluster(Cluster other) : this() {
      name_ = other.name_;
      DeleteTime = other.deleteTime_ != null ? other.DeleteTime.Clone() : null;
      CurrentOperation = other.currentOperation_ != null ? other.CurrentOperation.Clone() : null;
      displayName_ = other.displayName_;
      serveNodes_ = other.serveNodes_;
      defaultStorageType_ = other.defaultStorageType_;
    }

    public Cluster Clone() {
      return new Cluster(this);
    }

    public const int NameFieldNumber = 1;
    private string name_ = "";
    public string Name {
      get { return name_; }
      set {
        name_ = pb::Preconditions.CheckNotNull(value, "value");
      }
    }

    public const int DeleteTimeFieldNumber = 2;
    private global::Google.Protobuf.Timestamp deleteTime_;
    public global::Google.Protobuf.Timestamp DeleteTime {
      get { return deleteTime_; }
      set {
        deleteTime_ = value;
      }
    }

    public const int CurrentOperationFieldNumber = 3;
    private global::Google.Longrunning.Operation currentOperation_;
    public global::Google.Longrunning.Operation CurrentOperation {
      get { return currentOperation_; }
      set {
        currentOperation_ = value;
      }
    }

    public const int DisplayNameFieldNumber = 4;
    private string displayName_ = "";
    public string DisplayName {
      get { return displayName_; }
      set {
        displayName_ = pb::Preconditions.CheckNotNull(value, "value");
      }
    }

    public const int ServeNodesFieldNumber = 5;
    private int serveNodes_;
    public int ServeNodes {
      get { return serveNodes_; }
      set {
        serveNodes_ = value;
      }
    }

    public const int DefaultStorageTypeFieldNumber = 8;
    private global::Google.Bigtable.Admin.Cluster.V1.StorageType defaultStorageType_ = global::Google.Bigtable.Admin.Cluster.V1.StorageType.STORAGE_UNSPECIFIED;
    public global::Google.Bigtable.Admin.Cluster.V1.StorageType DefaultStorageType {
      get { return defaultStorageType_; }
      set {
        defaultStorageType_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as Cluster);
    }

    public bool Equals(Cluster other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (!object.Equals(DeleteTime, other.DeleteTime)) return false;
      if (!object.Equals(CurrentOperation, other.CurrentOperation)) return false;
      if (DisplayName != other.DisplayName) return false;
      if (ServeNodes != other.ServeNodes) return false;
      if (DefaultStorageType != other.DefaultStorageType) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (deleteTime_ != null) hash ^= DeleteTime.GetHashCode();
      if (currentOperation_ != null) hash ^= CurrentOperation.GetHashCode();
      if (DisplayName.Length != 0) hash ^= DisplayName.GetHashCode();
      if (ServeNodes != 0) hash ^= ServeNodes.GetHashCode();
      if (DefaultStorageType != global::Google.Bigtable.Admin.Cluster.V1.StorageType.STORAGE_UNSPECIFIED) hash ^= DefaultStorageType.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.Default.Format(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (deleteTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(DeleteTime);
      }
      if (currentOperation_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(CurrentOperation);
      }
      if (DisplayName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(DisplayName);
      }
      if (ServeNodes != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(ServeNodes);
      }
      if (DefaultStorageType != global::Google.Bigtable.Admin.Cluster.V1.StorageType.STORAGE_UNSPECIFIED) {
        output.WriteRawTag(64);
        output.WriteEnum((int) DefaultStorageType);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (deleteTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DeleteTime);
      }
      if (currentOperation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CurrentOperation);
      }
      if (DisplayName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayName);
      }
      if (ServeNodes != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ServeNodes);
      }
      if (DefaultStorageType != global::Google.Bigtable.Admin.Cluster.V1.StorageType.STORAGE_UNSPECIFIED) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) DefaultStorageType);
      }
      return size;
    }

    public void MergeFrom(Cluster other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.deleteTime_ != null) {
        if (deleteTime_ == null) {
          deleteTime_ = new global::Google.Protobuf.Timestamp();
        }
        DeleteTime.MergeFrom(other.DeleteTime);
      }
      if (other.currentOperation_ != null) {
        if (currentOperation_ == null) {
          currentOperation_ = new global::Google.Longrunning.Operation();
        }
        CurrentOperation.MergeFrom(other.CurrentOperation);
      }
      if (other.DisplayName.Length != 0) {
        DisplayName = other.DisplayName;
      }
      if (other.ServeNodes != 0) {
        ServeNodes = other.ServeNodes;
      }
      if (other.DefaultStorageType != global::Google.Bigtable.Admin.Cluster.V1.StorageType.STORAGE_UNSPECIFIED) {
        DefaultStorageType = other.DefaultStorageType;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            if (deleteTime_ == null) {
              deleteTime_ = new global::Google.Protobuf.Timestamp();
            }
            input.ReadMessage(deleteTime_);
            break;
          }
          case 26: {
            if (currentOperation_ == null) {
              currentOperation_ = new global::Google.Longrunning.Operation();
            }
            input.ReadMessage(currentOperation_);
            break;
          }
          case 34: {
            DisplayName = input.ReadString();
            break;
          }
          case 40: {
            ServeNodes = input.ReadInt32();
            break;
          }
          case 64: {
            defaultStorageType_ = (global::Google.Bigtable.Admin.Cluster.V1.StorageType) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
