// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/bigtable/admin/cluster/v1/bigtable_cluster_service_messages.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Bigtable.Admin.Cluster.V1 {

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class BigtableClusterServiceMessages {

    #region Descriptor
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BigtableClusterServiceMessages() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ckhnb29nbGUvYmlndGFibGUvYWRtaW4vY2x1c3Rlci92MS9iaWd0YWJsZV9j", 
            "bHVzdGVyX3NlcnZpY2VfbWVzc2FnZXMucHJvdG8SIGdvb2dsZS5iaWd0YWJs", 
            "ZS5hZG1pbi5jbHVzdGVyLnYxGjxnb29nbGUvYmlndGFibGUvYWRtaW4vY2x1", 
            "c3Rlci92MS9iaWd0YWJsZV9jbHVzdGVyX2RhdGEucHJvdG8aH2dvb2dsZS9w", 
            "cm90b2J1Zi90aW1lc3RhbXAucHJvdG8iIAoQTGlzdFpvbmVzUmVxdWVzdBIM", 
            "CgRuYW1lGAEgASgJIkoKEUxpc3Rab25lc1Jlc3BvbnNlEjUKBXpvbmVzGAEg", 
            "AygLMiYuZ29vZ2xlLmJpZ3RhYmxlLmFkbWluLmNsdXN0ZXIudjEuWm9uZSIh", 
            "ChFHZXRDbHVzdGVyUmVxdWVzdBIMCgRuYW1lGAEgASgJIiMKE0xpc3RDbHVz", 
            "dGVyc1JlcXVlc3QSDAoEbmFtZRgBIAEoCSKRAQoUTGlzdENsdXN0ZXJzUmVz", 
            "cG9uc2USOwoIY2x1c3RlcnMYASADKAsyKS5nb29nbGUuYmlndGFibGUuYWRt", 
            "aW4uY2x1c3Rlci52MS5DbHVzdGVyEjwKDGZhaWxlZF96b25lcxgCIAMoCzIm", 
            "Lmdvb2dsZS5iaWd0YWJsZS5hZG1pbi5jbHVzdGVyLnYxLlpvbmUidAoUQ3Jl", 
            "YXRlQ2x1c3RlclJlcXVlc3QSDAoEbmFtZRgBIAEoCRISCgpjbHVzdGVyX2lk", 
            "GAIgASgJEjoKB2NsdXN0ZXIYAyABKAsyKS5nb29nbGUuYmlndGFibGUuYWRt", 
            "aW4uY2x1c3Rlci52MS5DbHVzdGVyIswBChVDcmVhdGVDbHVzdGVyTWV0YWRh", 
            "dGESUAoQb3JpZ2luYWxfcmVxdWVzdBgBIAEoCzI2Lmdvb2dsZS5iaWd0YWJs", 
            "ZS5hZG1pbi5jbHVzdGVyLnYxLkNyZWF0ZUNsdXN0ZXJSZXF1ZXN0EjAKDHJl", 
            "cXVlc3RfdGltZRgCIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXAS", 
            "LwoLZmluaXNoX3RpbWUYAyABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0", 
            "YW1wIvABChVVcGRhdGVDbHVzdGVyTWV0YWRhdGESQwoQb3JpZ2luYWxfcmVx", 
            "dWVzdBgBIAEoCzIpLmdvb2dsZS5iaWd0YWJsZS5hZG1pbi5jbHVzdGVyLnYx", 
            "LkNsdXN0ZXISMAoMcmVxdWVzdF90aW1lGAIgASgLMhouZ29vZ2xlLnByb3Rv", 
            "YnVmLlRpbWVzdGFtcBIvCgtjYW5jZWxfdGltZRgDIAEoCzIaLmdvb2dsZS5w", 
            "cm90b2J1Zi5UaW1lc3RhbXASLwoLZmluaXNoX3RpbWUYBCABKAsyGi5nb29n", 
            "bGUucHJvdG9idWYuVGltZXN0YW1wIiQKFERlbGV0ZUNsdXN0ZXJSZXF1ZXN0", 
            "EgwKBG5hbWUYASABKAkiJgoWVW5kZWxldGVDbHVzdGVyUmVxdWVzdBIMCgRu", 
            "YW1lGAEgASgJInwKF1VuZGVsZXRlQ2x1c3Rlck1ldGFkYXRhEjAKDHJlcXVl", 
            "c3RfdGltZRgBIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASLwoL", 
            "ZmluaXNoX3RpbWUYAiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1w", 
            "Qk0KJGNvbS5nb29nbGUuYmlndGFibGUuYWRtaW4uY2x1c3Rlci52MUIjQmln", 
            "dGFibGVDbHVzdGVyU2VydmljZU1lc3NhZ2VzUHJvdG9QAWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Bigtable.Admin.Cluster.V1.BigtableClusterData.Descriptor, global::Google.Protobuf.Proto.Timestamp.Descriptor, },
          new pbr::GeneratedCodeInfo(null, new pbr::GeneratedCodeInfo[] {
            new pbr::GeneratedCodeInfo(typeof(global::Google.Bigtable.Admin.Cluster.V1.ListZonesRequest), new[]{ "Name" }, null, null, null),
            new pbr::GeneratedCodeInfo(typeof(global::Google.Bigtable.Admin.Cluster.V1.ListZonesResponse), new[]{ "Zones" }, null, null, null),
            new pbr::GeneratedCodeInfo(typeof(global::Google.Bigtable.Admin.Cluster.V1.GetClusterRequest), new[]{ "Name" }, null, null, null),
            new pbr::GeneratedCodeInfo(typeof(global::Google.Bigtable.Admin.Cluster.V1.ListClustersRequest), new[]{ "Name" }, null, null, null),
            new pbr::GeneratedCodeInfo(typeof(global::Google.Bigtable.Admin.Cluster.V1.ListClustersResponse), new[]{ "Clusters", "FailedZones" }, null, null, null),
            new pbr::GeneratedCodeInfo(typeof(global::Google.Bigtable.Admin.Cluster.V1.CreateClusterRequest), new[]{ "Name", "ClusterId", "Cluster" }, null, null, null),
            new pbr::GeneratedCodeInfo(typeof(global::Google.Bigtable.Admin.Cluster.V1.CreateClusterMetadata), new[]{ "OriginalRequest", "RequestTime", "FinishTime" }, null, null, null),
            new pbr::GeneratedCodeInfo(typeof(global::Google.Bigtable.Admin.Cluster.V1.UpdateClusterMetadata), new[]{ "OriginalRequest", "RequestTime", "CancelTime", "FinishTime" }, null, null, null),
            new pbr::GeneratedCodeInfo(typeof(global::Google.Bigtable.Admin.Cluster.V1.DeleteClusterRequest), new[]{ "Name" }, null, null, null),
            new pbr::GeneratedCodeInfo(typeof(global::Google.Bigtable.Admin.Cluster.V1.UndeleteClusterRequest), new[]{ "Name" }, null, null, null),
            new pbr::GeneratedCodeInfo(typeof(global::Google.Bigtable.Admin.Cluster.V1.UndeleteClusterMetadata), new[]{ "RequestTime", "FinishTime" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ListZonesRequest : pb::IMessage<ListZonesRequest> {
    private static readonly pb::MessageParser<ListZonesRequest> _parser = new pb::MessageParser<ListZonesRequest>(() => new ListZonesRequest());
    public static pb::MessageParser<ListZonesRequest> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Bigtable.Admin.Cluster.V1.BigtableClusterServiceMessages.Descriptor.MessageTypes[0]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public ListZonesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    public ListZonesRequest(ListZonesRequest other) : this() {
      name_ = other.name_;
    }

    public ListZonesRequest Clone() {
      return new ListZonesRequest(this);
    }

    public const int NameFieldNumber = 1;
    private string name_ = "";
    public string Name {
      get { return name_; }
      set {
        name_ = pb::Preconditions.CheckNotNull(value, "value");
      }
    }

    public override bool Equals(object other) {
      return Equals(other as ListZonesRequest);
    }

    public bool Equals(ListZonesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.Default.Format(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      return size;
    }

    public void MergeFrom(ListZonesRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ListZonesResponse : pb::IMessage<ListZonesResponse> {
    private static readonly pb::MessageParser<ListZonesResponse> _parser = new pb::MessageParser<ListZonesResponse>(() => new ListZonesResponse());
    public static pb::MessageParser<ListZonesResponse> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Bigtable.Admin.Cluster.V1.BigtableClusterServiceMessages.Descriptor.MessageTypes[1]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public ListZonesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    public ListZonesResponse(ListZonesResponse other) : this() {
      zones_ = other.zones_.Clone();
    }

    public ListZonesResponse Clone() {
      return new ListZonesResponse(this);
    }

    public const int ZonesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Bigtable.Admin.Cluster.V1.Zone> _repeated_zones_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Bigtable.Admin.Cluster.V1.Zone.Parser);
    private readonly pbc::RepeatedField<global::Google.Bigtable.Admin.Cluster.V1.Zone> zones_ = new pbc::RepeatedField<global::Google.Bigtable.Admin.Cluster.V1.Zone>();
    public pbc::RepeatedField<global::Google.Bigtable.Admin.Cluster.V1.Zone> Zones {
      get { return zones_; }
    }

    public override bool Equals(object other) {
      return Equals(other as ListZonesResponse);
    }

    public bool Equals(ListZonesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!zones_.Equals(other.zones_)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      hash ^= zones_.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.Default.Format(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      zones_.WriteTo(output, _repeated_zones_codec);
    }

    public int CalculateSize() {
      int size = 0;
      size += zones_.CalculateSize(_repeated_zones_codec);
      return size;
    }

    public void MergeFrom(ListZonesResponse other) {
      if (other == null) {
        return;
      }
      zones_.Add(other.zones_);
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            zones_.AddEntriesFrom(input, _repeated_zones_codec);
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GetClusterRequest : pb::IMessage<GetClusterRequest> {
    private static readonly pb::MessageParser<GetClusterRequest> _parser = new pb::MessageParser<GetClusterRequest>(() => new GetClusterRequest());
    public static pb::MessageParser<GetClusterRequest> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Bigtable.Admin.Cluster.V1.BigtableClusterServiceMessages.Descriptor.MessageTypes[2]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public GetClusterRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    public GetClusterRequest(GetClusterRequest other) : this() {
      name_ = other.name_;
    }

    public GetClusterRequest Clone() {
      return new GetClusterRequest(this);
    }

    public const int NameFieldNumber = 1;
    private string name_ = "";
    public string Name {
      get { return name_; }
      set {
        name_ = pb::Preconditions.CheckNotNull(value, "value");
      }
    }

    public override bool Equals(object other) {
      return Equals(other as GetClusterRequest);
    }

    public bool Equals(GetClusterRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.Default.Format(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      return size;
    }

    public void MergeFrom(GetClusterRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ListClustersRequest : pb::IMessage<ListClustersRequest> {
    private static readonly pb::MessageParser<ListClustersRequest> _parser = new pb::MessageParser<ListClustersRequest>(() => new ListClustersRequest());
    public static pb::MessageParser<ListClustersRequest> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Bigtable.Admin.Cluster.V1.BigtableClusterServiceMessages.Descriptor.MessageTypes[3]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public ListClustersRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    public ListClustersRequest(ListClustersRequest other) : this() {
      name_ = other.name_;
    }

    public ListClustersRequest Clone() {
      return new ListClustersRequest(this);
    }

    public const int NameFieldNumber = 1;
    private string name_ = "";
    public string Name {
      get { return name_; }
      set {
        name_ = pb::Preconditions.CheckNotNull(value, "value");
      }
    }

    public override bool Equals(object other) {
      return Equals(other as ListClustersRequest);
    }

    public bool Equals(ListClustersRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.Default.Format(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      return size;
    }

    public void MergeFrom(ListClustersRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ListClustersResponse : pb::IMessage<ListClustersResponse> {
    private static readonly pb::MessageParser<ListClustersResponse> _parser = new pb::MessageParser<ListClustersResponse>(() => new ListClustersResponse());
    public static pb::MessageParser<ListClustersResponse> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Bigtable.Admin.Cluster.V1.BigtableClusterServiceMessages.Descriptor.MessageTypes[4]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public ListClustersResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    public ListClustersResponse(ListClustersResponse other) : this() {
      clusters_ = other.clusters_.Clone();
      failedZones_ = other.failedZones_.Clone();
    }

    public ListClustersResponse Clone() {
      return new ListClustersResponse(this);
    }

    public const int ClustersFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Bigtable.Admin.Cluster.V1.Cluster> _repeated_clusters_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Bigtable.Admin.Cluster.V1.Cluster.Parser);
    private readonly pbc::RepeatedField<global::Google.Bigtable.Admin.Cluster.V1.Cluster> clusters_ = new pbc::RepeatedField<global::Google.Bigtable.Admin.Cluster.V1.Cluster>();
    public pbc::RepeatedField<global::Google.Bigtable.Admin.Cluster.V1.Cluster> Clusters {
      get { return clusters_; }
    }

    public const int FailedZonesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Google.Bigtable.Admin.Cluster.V1.Zone> _repeated_failedZones_codec
        = pb::FieldCodec.ForMessage(18, global::Google.Bigtable.Admin.Cluster.V1.Zone.Parser);
    private readonly pbc::RepeatedField<global::Google.Bigtable.Admin.Cluster.V1.Zone> failedZones_ = new pbc::RepeatedField<global::Google.Bigtable.Admin.Cluster.V1.Zone>();
    public pbc::RepeatedField<global::Google.Bigtable.Admin.Cluster.V1.Zone> FailedZones {
      get { return failedZones_; }
    }

    public override bool Equals(object other) {
      return Equals(other as ListClustersResponse);
    }

    public bool Equals(ListClustersResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!clusters_.Equals(other.clusters_)) return false;
      if(!failedZones_.Equals(other.failedZones_)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      hash ^= clusters_.GetHashCode();
      hash ^= failedZones_.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.Default.Format(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      clusters_.WriteTo(output, _repeated_clusters_codec);
      failedZones_.WriteTo(output, _repeated_failedZones_codec);
    }

    public int CalculateSize() {
      int size = 0;
      size += clusters_.CalculateSize(_repeated_clusters_codec);
      size += failedZones_.CalculateSize(_repeated_failedZones_codec);
      return size;
    }

    public void MergeFrom(ListClustersResponse other) {
      if (other == null) {
        return;
      }
      clusters_.Add(other.clusters_);
      failedZones_.Add(other.failedZones_);
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            clusters_.AddEntriesFrom(input, _repeated_clusters_codec);
            break;
          }
          case 18: {
            failedZones_.AddEntriesFrom(input, _repeated_failedZones_codec);
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class CreateClusterRequest : pb::IMessage<CreateClusterRequest> {
    private static readonly pb::MessageParser<CreateClusterRequest> _parser = new pb::MessageParser<CreateClusterRequest>(() => new CreateClusterRequest());
    public static pb::MessageParser<CreateClusterRequest> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Bigtable.Admin.Cluster.V1.BigtableClusterServiceMessages.Descriptor.MessageTypes[5]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public CreateClusterRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    public CreateClusterRequest(CreateClusterRequest other) : this() {
      name_ = other.name_;
      clusterId_ = other.clusterId_;
      Cluster = other.cluster_ != null ? other.Cluster.Clone() : null;
    }

    public CreateClusterRequest Clone() {
      return new CreateClusterRequest(this);
    }

    public const int NameFieldNumber = 1;
    private string name_ = "";
    public string Name {
      get { return name_; }
      set {
        name_ = pb::Preconditions.CheckNotNull(value, "value");
      }
    }

    public const int ClusterIdFieldNumber = 2;
    private string clusterId_ = "";
    public string ClusterId {
      get { return clusterId_; }
      set {
        clusterId_ = pb::Preconditions.CheckNotNull(value, "value");
      }
    }

    public const int ClusterFieldNumber = 3;
    private global::Google.Bigtable.Admin.Cluster.V1.Cluster cluster_;
    public global::Google.Bigtable.Admin.Cluster.V1.Cluster Cluster {
      get { return cluster_; }
      set {
        cluster_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as CreateClusterRequest);
    }

    public bool Equals(CreateClusterRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (ClusterId != other.ClusterId) return false;
      if (!object.Equals(Cluster, other.Cluster)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (ClusterId.Length != 0) hash ^= ClusterId.GetHashCode();
      if (cluster_ != null) hash ^= Cluster.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.Default.Format(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (ClusterId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ClusterId);
      }
      if (cluster_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Cluster);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (ClusterId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterId);
      }
      if (cluster_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Cluster);
      }
      return size;
    }

    public void MergeFrom(CreateClusterRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.ClusterId.Length != 0) {
        ClusterId = other.ClusterId;
      }
      if (other.cluster_ != null) {
        if (cluster_ == null) {
          cluster_ = new global::Google.Bigtable.Admin.Cluster.V1.Cluster();
        }
        Cluster.MergeFrom(other.Cluster);
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            ClusterId = input.ReadString();
            break;
          }
          case 26: {
            if (cluster_ == null) {
              cluster_ = new global::Google.Bigtable.Admin.Cluster.V1.Cluster();
            }
            input.ReadMessage(cluster_);
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class CreateClusterMetadata : pb::IMessage<CreateClusterMetadata> {
    private static readonly pb::MessageParser<CreateClusterMetadata> _parser = new pb::MessageParser<CreateClusterMetadata>(() => new CreateClusterMetadata());
    public static pb::MessageParser<CreateClusterMetadata> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Bigtable.Admin.Cluster.V1.BigtableClusterServiceMessages.Descriptor.MessageTypes[6]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public CreateClusterMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    public CreateClusterMetadata(CreateClusterMetadata other) : this() {
      OriginalRequest = other.originalRequest_ != null ? other.OriginalRequest.Clone() : null;
      RequestTime = other.requestTime_ != null ? other.RequestTime.Clone() : null;
      FinishTime = other.finishTime_ != null ? other.FinishTime.Clone() : null;
    }

    public CreateClusterMetadata Clone() {
      return new CreateClusterMetadata(this);
    }

    public const int OriginalRequestFieldNumber = 1;
    private global::Google.Bigtable.Admin.Cluster.V1.CreateClusterRequest originalRequest_;
    public global::Google.Bigtable.Admin.Cluster.V1.CreateClusterRequest OriginalRequest {
      get { return originalRequest_; }
      set {
        originalRequest_ = value;
      }
    }

    public const int RequestTimeFieldNumber = 2;
    private global::Google.Protobuf.Timestamp requestTime_;
    public global::Google.Protobuf.Timestamp RequestTime {
      get { return requestTime_; }
      set {
        requestTime_ = value;
      }
    }

    public const int FinishTimeFieldNumber = 3;
    private global::Google.Protobuf.Timestamp finishTime_;
    public global::Google.Protobuf.Timestamp FinishTime {
      get { return finishTime_; }
      set {
        finishTime_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as CreateClusterMetadata);
    }

    public bool Equals(CreateClusterMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(OriginalRequest, other.OriginalRequest)) return false;
      if (!object.Equals(RequestTime, other.RequestTime)) return false;
      if (!object.Equals(FinishTime, other.FinishTime)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (originalRequest_ != null) hash ^= OriginalRequest.GetHashCode();
      if (requestTime_ != null) hash ^= RequestTime.GetHashCode();
      if (finishTime_ != null) hash ^= FinishTime.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.Default.Format(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (originalRequest_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(OriginalRequest);
      }
      if (requestTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(RequestTime);
      }
      if (finishTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(FinishTime);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (originalRequest_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OriginalRequest);
      }
      if (requestTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RequestTime);
      }
      if (finishTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FinishTime);
      }
      return size;
    }

    public void MergeFrom(CreateClusterMetadata other) {
      if (other == null) {
        return;
      }
      if (other.originalRequest_ != null) {
        if (originalRequest_ == null) {
          originalRequest_ = new global::Google.Bigtable.Admin.Cluster.V1.CreateClusterRequest();
        }
        OriginalRequest.MergeFrom(other.OriginalRequest);
      }
      if (other.requestTime_ != null) {
        if (requestTime_ == null) {
          requestTime_ = new global::Google.Protobuf.Timestamp();
        }
        RequestTime.MergeFrom(other.RequestTime);
      }
      if (other.finishTime_ != null) {
        if (finishTime_ == null) {
          finishTime_ = new global::Google.Protobuf.Timestamp();
        }
        FinishTime.MergeFrom(other.FinishTime);
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (originalRequest_ == null) {
              originalRequest_ = new global::Google.Bigtable.Admin.Cluster.V1.CreateClusterRequest();
            }
            input.ReadMessage(originalRequest_);
            break;
          }
          case 18: {
            if (requestTime_ == null) {
              requestTime_ = new global::Google.Protobuf.Timestamp();
            }
            input.ReadMessage(requestTime_);
            break;
          }
          case 26: {
            if (finishTime_ == null) {
              finishTime_ = new global::Google.Protobuf.Timestamp();
            }
            input.ReadMessage(finishTime_);
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class UpdateClusterMetadata : pb::IMessage<UpdateClusterMetadata> {
    private static readonly pb::MessageParser<UpdateClusterMetadata> _parser = new pb::MessageParser<UpdateClusterMetadata>(() => new UpdateClusterMetadata());
    public static pb::MessageParser<UpdateClusterMetadata> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Bigtable.Admin.Cluster.V1.BigtableClusterServiceMessages.Descriptor.MessageTypes[7]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public UpdateClusterMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    public UpdateClusterMetadata(UpdateClusterMetadata other) : this() {
      OriginalRequest = other.originalRequest_ != null ? other.OriginalRequest.Clone() : null;
      RequestTime = other.requestTime_ != null ? other.RequestTime.Clone() : null;
      CancelTime = other.cancelTime_ != null ? other.CancelTime.Clone() : null;
      FinishTime = other.finishTime_ != null ? other.FinishTime.Clone() : null;
    }

    public UpdateClusterMetadata Clone() {
      return new UpdateClusterMetadata(this);
    }

    public const int OriginalRequestFieldNumber = 1;
    private global::Google.Bigtable.Admin.Cluster.V1.Cluster originalRequest_;
    public global::Google.Bigtable.Admin.Cluster.V1.Cluster OriginalRequest {
      get { return originalRequest_; }
      set {
        originalRequest_ = value;
      }
    }

    public const int RequestTimeFieldNumber = 2;
    private global::Google.Protobuf.Timestamp requestTime_;
    public global::Google.Protobuf.Timestamp RequestTime {
      get { return requestTime_; }
      set {
        requestTime_ = value;
      }
    }

    public const int CancelTimeFieldNumber = 3;
    private global::Google.Protobuf.Timestamp cancelTime_;
    public global::Google.Protobuf.Timestamp CancelTime {
      get { return cancelTime_; }
      set {
        cancelTime_ = value;
      }
    }

    public const int FinishTimeFieldNumber = 4;
    private global::Google.Protobuf.Timestamp finishTime_;
    public global::Google.Protobuf.Timestamp FinishTime {
      get { return finishTime_; }
      set {
        finishTime_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as UpdateClusterMetadata);
    }

    public bool Equals(UpdateClusterMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(OriginalRequest, other.OriginalRequest)) return false;
      if (!object.Equals(RequestTime, other.RequestTime)) return false;
      if (!object.Equals(CancelTime, other.CancelTime)) return false;
      if (!object.Equals(FinishTime, other.FinishTime)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (originalRequest_ != null) hash ^= OriginalRequest.GetHashCode();
      if (requestTime_ != null) hash ^= RequestTime.GetHashCode();
      if (cancelTime_ != null) hash ^= CancelTime.GetHashCode();
      if (finishTime_ != null) hash ^= FinishTime.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.Default.Format(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (originalRequest_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(OriginalRequest);
      }
      if (requestTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(RequestTime);
      }
      if (cancelTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(CancelTime);
      }
      if (finishTime_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(FinishTime);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (originalRequest_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OriginalRequest);
      }
      if (requestTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RequestTime);
      }
      if (cancelTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CancelTime);
      }
      if (finishTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FinishTime);
      }
      return size;
    }

    public void MergeFrom(UpdateClusterMetadata other) {
      if (other == null) {
        return;
      }
      if (other.originalRequest_ != null) {
        if (originalRequest_ == null) {
          originalRequest_ = new global::Google.Bigtable.Admin.Cluster.V1.Cluster();
        }
        OriginalRequest.MergeFrom(other.OriginalRequest);
      }
      if (other.requestTime_ != null) {
        if (requestTime_ == null) {
          requestTime_ = new global::Google.Protobuf.Timestamp();
        }
        RequestTime.MergeFrom(other.RequestTime);
      }
      if (other.cancelTime_ != null) {
        if (cancelTime_ == null) {
          cancelTime_ = new global::Google.Protobuf.Timestamp();
        }
        CancelTime.MergeFrom(other.CancelTime);
      }
      if (other.finishTime_ != null) {
        if (finishTime_ == null) {
          finishTime_ = new global::Google.Protobuf.Timestamp();
        }
        FinishTime.MergeFrom(other.FinishTime);
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (originalRequest_ == null) {
              originalRequest_ = new global::Google.Bigtable.Admin.Cluster.V1.Cluster();
            }
            input.ReadMessage(originalRequest_);
            break;
          }
          case 18: {
            if (requestTime_ == null) {
              requestTime_ = new global::Google.Protobuf.Timestamp();
            }
            input.ReadMessage(requestTime_);
            break;
          }
          case 26: {
            if (cancelTime_ == null) {
              cancelTime_ = new global::Google.Protobuf.Timestamp();
            }
            input.ReadMessage(cancelTime_);
            break;
          }
          case 34: {
            if (finishTime_ == null) {
              finishTime_ = new global::Google.Protobuf.Timestamp();
            }
            input.ReadMessage(finishTime_);
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DeleteClusterRequest : pb::IMessage<DeleteClusterRequest> {
    private static readonly pb::MessageParser<DeleteClusterRequest> _parser = new pb::MessageParser<DeleteClusterRequest>(() => new DeleteClusterRequest());
    public static pb::MessageParser<DeleteClusterRequest> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Bigtable.Admin.Cluster.V1.BigtableClusterServiceMessages.Descriptor.MessageTypes[8]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public DeleteClusterRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    public DeleteClusterRequest(DeleteClusterRequest other) : this() {
      name_ = other.name_;
    }

    public DeleteClusterRequest Clone() {
      return new DeleteClusterRequest(this);
    }

    public const int NameFieldNumber = 1;
    private string name_ = "";
    public string Name {
      get { return name_; }
      set {
        name_ = pb::Preconditions.CheckNotNull(value, "value");
      }
    }

    public override bool Equals(object other) {
      return Equals(other as DeleteClusterRequest);
    }

    public bool Equals(DeleteClusterRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.Default.Format(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      return size;
    }

    public void MergeFrom(DeleteClusterRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class UndeleteClusterRequest : pb::IMessage<UndeleteClusterRequest> {
    private static readonly pb::MessageParser<UndeleteClusterRequest> _parser = new pb::MessageParser<UndeleteClusterRequest>(() => new UndeleteClusterRequest());
    public static pb::MessageParser<UndeleteClusterRequest> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Bigtable.Admin.Cluster.V1.BigtableClusterServiceMessages.Descriptor.MessageTypes[9]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public UndeleteClusterRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    public UndeleteClusterRequest(UndeleteClusterRequest other) : this() {
      name_ = other.name_;
    }

    public UndeleteClusterRequest Clone() {
      return new UndeleteClusterRequest(this);
    }

    public const int NameFieldNumber = 1;
    private string name_ = "";
    public string Name {
      get { return name_; }
      set {
        name_ = pb::Preconditions.CheckNotNull(value, "value");
      }
    }

    public override bool Equals(object other) {
      return Equals(other as UndeleteClusterRequest);
    }

    public bool Equals(UndeleteClusterRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.Default.Format(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      return size;
    }

    public void MergeFrom(UndeleteClusterRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class UndeleteClusterMetadata : pb::IMessage<UndeleteClusterMetadata> {
    private static readonly pb::MessageParser<UndeleteClusterMetadata> _parser = new pb::MessageParser<UndeleteClusterMetadata>(() => new UndeleteClusterMetadata());
    public static pb::MessageParser<UndeleteClusterMetadata> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Bigtable.Admin.Cluster.V1.BigtableClusterServiceMessages.Descriptor.MessageTypes[10]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public UndeleteClusterMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    public UndeleteClusterMetadata(UndeleteClusterMetadata other) : this() {
      RequestTime = other.requestTime_ != null ? other.RequestTime.Clone() : null;
      FinishTime = other.finishTime_ != null ? other.FinishTime.Clone() : null;
    }

    public UndeleteClusterMetadata Clone() {
      return new UndeleteClusterMetadata(this);
    }

    public const int RequestTimeFieldNumber = 1;
    private global::Google.Protobuf.Timestamp requestTime_;
    public global::Google.Protobuf.Timestamp RequestTime {
      get { return requestTime_; }
      set {
        requestTime_ = value;
      }
    }

    public const int FinishTimeFieldNumber = 2;
    private global::Google.Protobuf.Timestamp finishTime_;
    public global::Google.Protobuf.Timestamp FinishTime {
      get { return finishTime_; }
      set {
        finishTime_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as UndeleteClusterMetadata);
    }

    public bool Equals(UndeleteClusterMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(RequestTime, other.RequestTime)) return false;
      if (!object.Equals(FinishTime, other.FinishTime)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (requestTime_ != null) hash ^= RequestTime.GetHashCode();
      if (finishTime_ != null) hash ^= FinishTime.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.Default.Format(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (requestTime_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(RequestTime);
      }
      if (finishTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(FinishTime);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (requestTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RequestTime);
      }
      if (finishTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FinishTime);
      }
      return size;
    }

    public void MergeFrom(UndeleteClusterMetadata other) {
      if (other == null) {
        return;
      }
      if (other.requestTime_ != null) {
        if (requestTime_ == null) {
          requestTime_ = new global::Google.Protobuf.Timestamp();
        }
        RequestTime.MergeFrom(other.RequestTime);
      }
      if (other.finishTime_ != null) {
        if (finishTime_ == null) {
          finishTime_ = new global::Google.Protobuf.Timestamp();
        }
        FinishTime.MergeFrom(other.FinishTime);
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (requestTime_ == null) {
              requestTime_ = new global::Google.Protobuf.Timestamp();
            }
            input.ReadMessage(requestTime_);
            break;
          }
          case 18: {
            if (finishTime_ == null) {
              finishTime_ = new global::Google.Protobuf.Timestamp();
            }
            input.ReadMessage(finishTime_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
