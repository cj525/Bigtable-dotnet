// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/bigtable/admin/table/v1/bigtable_table_service.proto
#region Designer generated code

using System;
using System.Threading;
using System.Threading.Tasks;
using Grpc.Core;

namespace Google.Bigtable.Admin.Table.V1 {
  public static class BigtableTableService
  {
    static readonly string __ServiceName = "google.bigtable.admin.table.v1.BigtableTableService";

    static readonly Marshaller<global::Google.Bigtable.Admin.Table.V1.CreateTableRequest> __Marshaller_CreateTableRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Bigtable.Admin.Table.V1.CreateTableRequest.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Bigtable.Admin.Table.V1.Table> __Marshaller_Table = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Bigtable.Admin.Table.V1.Table.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Bigtable.Admin.Table.V1.ListTablesRequest> __Marshaller_ListTablesRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Bigtable.Admin.Table.V1.ListTablesRequest.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Bigtable.Admin.Table.V1.ListTablesResponse> __Marshaller_ListTablesResponse = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Bigtable.Admin.Table.V1.ListTablesResponse.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Bigtable.Admin.Table.V1.GetTableRequest> __Marshaller_GetTableRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Bigtable.Admin.Table.V1.GetTableRequest.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Bigtable.Admin.Table.V1.DeleteTableRequest> __Marshaller_DeleteTableRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Bigtable.Admin.Table.V1.DeleteTableRequest.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Protobuf.Empty> __Marshaller_Empty = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.Empty.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Bigtable.Admin.Table.V1.RenameTableRequest> __Marshaller_RenameTableRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Bigtable.Admin.Table.V1.RenameTableRequest.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Bigtable.Admin.Table.V1.CreateColumnFamilyRequest> __Marshaller_CreateColumnFamilyRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Bigtable.Admin.Table.V1.CreateColumnFamilyRequest.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Bigtable.Admin.Table.V1.ColumnFamily> __Marshaller_ColumnFamily = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Bigtable.Admin.Table.V1.ColumnFamily.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Bigtable.Admin.Table.V1.DeleteColumnFamilyRequest> __Marshaller_DeleteColumnFamilyRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Bigtable.Admin.Table.V1.DeleteColumnFamilyRequest.Parser.ParseFrom);

    static readonly Method<global::Google.Bigtable.Admin.Table.V1.CreateTableRequest, global::Google.Bigtable.Admin.Table.V1.Table> __Method_CreateTable = new Method<global::Google.Bigtable.Admin.Table.V1.CreateTableRequest, global::Google.Bigtable.Admin.Table.V1.Table>(
        MethodType.Unary,
        __ServiceName,
        "CreateTable",
        __Marshaller_CreateTableRequest,
        __Marshaller_Table);

    static readonly Method<global::Google.Bigtable.Admin.Table.V1.ListTablesRequest, global::Google.Bigtable.Admin.Table.V1.ListTablesResponse> __Method_ListTables = new Method<global::Google.Bigtable.Admin.Table.V1.ListTablesRequest, global::Google.Bigtable.Admin.Table.V1.ListTablesResponse>(
        MethodType.Unary,
        __ServiceName,
        "ListTables",
        __Marshaller_ListTablesRequest,
        __Marshaller_ListTablesResponse);

    static readonly Method<global::Google.Bigtable.Admin.Table.V1.GetTableRequest, global::Google.Bigtable.Admin.Table.V1.Table> __Method_GetTable = new Method<global::Google.Bigtable.Admin.Table.V1.GetTableRequest, global::Google.Bigtable.Admin.Table.V1.Table>(
        MethodType.Unary,
        __ServiceName,
        "GetTable",
        __Marshaller_GetTableRequest,
        __Marshaller_Table);

    static readonly Method<global::Google.Bigtable.Admin.Table.V1.DeleteTableRequest, global::Google.Protobuf.Empty> __Method_DeleteTable = new Method<global::Google.Bigtable.Admin.Table.V1.DeleteTableRequest, global::Google.Protobuf.Empty>(
        MethodType.Unary,
        __ServiceName,
        "DeleteTable",
        __Marshaller_DeleteTableRequest,
        __Marshaller_Empty);

    static readonly Method<global::Google.Bigtable.Admin.Table.V1.RenameTableRequest, global::Google.Protobuf.Empty> __Method_RenameTable = new Method<global::Google.Bigtable.Admin.Table.V1.RenameTableRequest, global::Google.Protobuf.Empty>(
        MethodType.Unary,
        __ServiceName,
        "RenameTable",
        __Marshaller_RenameTableRequest,
        __Marshaller_Empty);

    static readonly Method<global::Google.Bigtable.Admin.Table.V1.CreateColumnFamilyRequest, global::Google.Bigtable.Admin.Table.V1.ColumnFamily> __Method_CreateColumnFamily = new Method<global::Google.Bigtable.Admin.Table.V1.CreateColumnFamilyRequest, global::Google.Bigtable.Admin.Table.V1.ColumnFamily>(
        MethodType.Unary,
        __ServiceName,
        "CreateColumnFamily",
        __Marshaller_CreateColumnFamilyRequest,
        __Marshaller_ColumnFamily);

    static readonly Method<global::Google.Bigtable.Admin.Table.V1.ColumnFamily, global::Google.Bigtable.Admin.Table.V1.ColumnFamily> __Method_UpdateColumnFamily = new Method<global::Google.Bigtable.Admin.Table.V1.ColumnFamily, global::Google.Bigtable.Admin.Table.V1.ColumnFamily>(
        MethodType.Unary,
        __ServiceName,
        "UpdateColumnFamily",
        __Marshaller_ColumnFamily,
        __Marshaller_ColumnFamily);

    static readonly Method<global::Google.Bigtable.Admin.Table.V1.DeleteColumnFamilyRequest, global::Google.Protobuf.Empty> __Method_DeleteColumnFamily = new Method<global::Google.Bigtable.Admin.Table.V1.DeleteColumnFamilyRequest, global::Google.Protobuf.Empty>(
        MethodType.Unary,
        __ServiceName,
        "DeleteColumnFamily",
        __Marshaller_DeleteColumnFamilyRequest,
        __Marshaller_Empty);

    // service descriptor
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Bigtable.Admin.Table.V1.Proto.BigtableTableService.Descriptor.Services[0]; }
    }

    // client interface
    public interface IBigtableTableServiceClient
    {
      global::Google.Bigtable.Admin.Table.V1.Table CreateTable(global::Google.Bigtable.Admin.Table.V1.CreateTableRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken));
      global::Google.Bigtable.Admin.Table.V1.Table CreateTable(global::Google.Bigtable.Admin.Table.V1.CreateTableRequest request, CallOptions options);
      AsyncUnaryCall<global::Google.Bigtable.Admin.Table.V1.Table> CreateTableAsync(global::Google.Bigtable.Admin.Table.V1.CreateTableRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken));
      AsyncUnaryCall<global::Google.Bigtable.Admin.Table.V1.Table> CreateTableAsync(global::Google.Bigtable.Admin.Table.V1.CreateTableRequest request, CallOptions options);
      global::Google.Bigtable.Admin.Table.V1.ListTablesResponse ListTables(global::Google.Bigtable.Admin.Table.V1.ListTablesRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken));
      global::Google.Bigtable.Admin.Table.V1.ListTablesResponse ListTables(global::Google.Bigtable.Admin.Table.V1.ListTablesRequest request, CallOptions options);
      AsyncUnaryCall<global::Google.Bigtable.Admin.Table.V1.ListTablesResponse> ListTablesAsync(global::Google.Bigtable.Admin.Table.V1.ListTablesRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken));
      AsyncUnaryCall<global::Google.Bigtable.Admin.Table.V1.ListTablesResponse> ListTablesAsync(global::Google.Bigtable.Admin.Table.V1.ListTablesRequest request, CallOptions options);
      global::Google.Bigtable.Admin.Table.V1.Table GetTable(global::Google.Bigtable.Admin.Table.V1.GetTableRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken));
      global::Google.Bigtable.Admin.Table.V1.Table GetTable(global::Google.Bigtable.Admin.Table.V1.GetTableRequest request, CallOptions options);
      AsyncUnaryCall<global::Google.Bigtable.Admin.Table.V1.Table> GetTableAsync(global::Google.Bigtable.Admin.Table.V1.GetTableRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken));
      AsyncUnaryCall<global::Google.Bigtable.Admin.Table.V1.Table> GetTableAsync(global::Google.Bigtable.Admin.Table.V1.GetTableRequest request, CallOptions options);
      global::Google.Protobuf.Empty DeleteTable(global::Google.Bigtable.Admin.Table.V1.DeleteTableRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken));
      global::Google.Protobuf.Empty DeleteTable(global::Google.Bigtable.Admin.Table.V1.DeleteTableRequest request, CallOptions options);
      AsyncUnaryCall<global::Google.Protobuf.Empty> DeleteTableAsync(global::Google.Bigtable.Admin.Table.V1.DeleteTableRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken));
      AsyncUnaryCall<global::Google.Protobuf.Empty> DeleteTableAsync(global::Google.Bigtable.Admin.Table.V1.DeleteTableRequest request, CallOptions options);
      global::Google.Protobuf.Empty RenameTable(global::Google.Bigtable.Admin.Table.V1.RenameTableRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken));
      global::Google.Protobuf.Empty RenameTable(global::Google.Bigtable.Admin.Table.V1.RenameTableRequest request, CallOptions options);
      AsyncUnaryCall<global::Google.Protobuf.Empty> RenameTableAsync(global::Google.Bigtable.Admin.Table.V1.RenameTableRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken));
      AsyncUnaryCall<global::Google.Protobuf.Empty> RenameTableAsync(global::Google.Bigtable.Admin.Table.V1.RenameTableRequest request, CallOptions options);
      global::Google.Bigtable.Admin.Table.V1.ColumnFamily CreateColumnFamily(global::Google.Bigtable.Admin.Table.V1.CreateColumnFamilyRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken));
      global::Google.Bigtable.Admin.Table.V1.ColumnFamily CreateColumnFamily(global::Google.Bigtable.Admin.Table.V1.CreateColumnFamilyRequest request, CallOptions options);
      AsyncUnaryCall<global::Google.Bigtable.Admin.Table.V1.ColumnFamily> CreateColumnFamilyAsync(global::Google.Bigtable.Admin.Table.V1.CreateColumnFamilyRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken));
      AsyncUnaryCall<global::Google.Bigtable.Admin.Table.V1.ColumnFamily> CreateColumnFamilyAsync(global::Google.Bigtable.Admin.Table.V1.CreateColumnFamilyRequest request, CallOptions options);
      global::Google.Bigtable.Admin.Table.V1.ColumnFamily UpdateColumnFamily(global::Google.Bigtable.Admin.Table.V1.ColumnFamily request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken));
      global::Google.Bigtable.Admin.Table.V1.ColumnFamily UpdateColumnFamily(global::Google.Bigtable.Admin.Table.V1.ColumnFamily request, CallOptions options);
      AsyncUnaryCall<global::Google.Bigtable.Admin.Table.V1.ColumnFamily> UpdateColumnFamilyAsync(global::Google.Bigtable.Admin.Table.V1.ColumnFamily request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken));
      AsyncUnaryCall<global::Google.Bigtable.Admin.Table.V1.ColumnFamily> UpdateColumnFamilyAsync(global::Google.Bigtable.Admin.Table.V1.ColumnFamily request, CallOptions options);
      global::Google.Protobuf.Empty DeleteColumnFamily(global::Google.Bigtable.Admin.Table.V1.DeleteColumnFamilyRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken));
      global::Google.Protobuf.Empty DeleteColumnFamily(global::Google.Bigtable.Admin.Table.V1.DeleteColumnFamilyRequest request, CallOptions options);
      AsyncUnaryCall<global::Google.Protobuf.Empty> DeleteColumnFamilyAsync(global::Google.Bigtable.Admin.Table.V1.DeleteColumnFamilyRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken));
      AsyncUnaryCall<global::Google.Protobuf.Empty> DeleteColumnFamilyAsync(global::Google.Bigtable.Admin.Table.V1.DeleteColumnFamilyRequest request, CallOptions options);
    }

    // server-side interface
    public interface IBigtableTableService
    {
      Task<global::Google.Bigtable.Admin.Table.V1.Table> CreateTable(global::Google.Bigtable.Admin.Table.V1.CreateTableRequest request, ServerCallContext context);
      Task<global::Google.Bigtable.Admin.Table.V1.ListTablesResponse> ListTables(global::Google.Bigtable.Admin.Table.V1.ListTablesRequest request, ServerCallContext context);
      Task<global::Google.Bigtable.Admin.Table.V1.Table> GetTable(global::Google.Bigtable.Admin.Table.V1.GetTableRequest request, ServerCallContext context);
      Task<global::Google.Protobuf.Empty> DeleteTable(global::Google.Bigtable.Admin.Table.V1.DeleteTableRequest request, ServerCallContext context);
      Task<global::Google.Protobuf.Empty> RenameTable(global::Google.Bigtable.Admin.Table.V1.RenameTableRequest request, ServerCallContext context);
      Task<global::Google.Bigtable.Admin.Table.V1.ColumnFamily> CreateColumnFamily(global::Google.Bigtable.Admin.Table.V1.CreateColumnFamilyRequest request, ServerCallContext context);
      Task<global::Google.Bigtable.Admin.Table.V1.ColumnFamily> UpdateColumnFamily(global::Google.Bigtable.Admin.Table.V1.ColumnFamily request, ServerCallContext context);
      Task<global::Google.Protobuf.Empty> DeleteColumnFamily(global::Google.Bigtable.Admin.Table.V1.DeleteColumnFamilyRequest request, ServerCallContext context);
    }

    // client stub
    public class BigtableTableServiceClient : ClientBase, IBigtableTableServiceClient
    {
      public BigtableTableServiceClient(Channel channel) : base(channel)
      {
      }
      public global::Google.Bigtable.Admin.Table.V1.Table CreateTable(global::Google.Bigtable.Admin.Table.V1.CreateTableRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        var call = CreateCall(__Method_CreateTable, new CallOptions(headers, deadline, cancellationToken));
        return Calls.BlockingUnaryCall(call, request);
      }
      public global::Google.Bigtable.Admin.Table.V1.Table CreateTable(global::Google.Bigtable.Admin.Table.V1.CreateTableRequest request, CallOptions options)
      {
        var call = CreateCall(__Method_CreateTable, options);
        return Calls.BlockingUnaryCall(call, request);
      }
      public AsyncUnaryCall<global::Google.Bigtable.Admin.Table.V1.Table> CreateTableAsync(global::Google.Bigtable.Admin.Table.V1.CreateTableRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        var call = CreateCall(__Method_CreateTable, new CallOptions(headers, deadline, cancellationToken));
        return Calls.AsyncUnaryCall(call, request);
      }
      public AsyncUnaryCall<global::Google.Bigtable.Admin.Table.V1.Table> CreateTableAsync(global::Google.Bigtable.Admin.Table.V1.CreateTableRequest request, CallOptions options)
      {
        var call = CreateCall(__Method_CreateTable, options);
        return Calls.AsyncUnaryCall(call, request);
      }
      public global::Google.Bigtable.Admin.Table.V1.ListTablesResponse ListTables(global::Google.Bigtable.Admin.Table.V1.ListTablesRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        var call = CreateCall(__Method_ListTables, new CallOptions(headers, deadline, cancellationToken));
        return Calls.BlockingUnaryCall(call, request);
      }
      public global::Google.Bigtable.Admin.Table.V1.ListTablesResponse ListTables(global::Google.Bigtable.Admin.Table.V1.ListTablesRequest request, CallOptions options)
      {
        var call = CreateCall(__Method_ListTables, options);
        return Calls.BlockingUnaryCall(call, request);
      }
      public AsyncUnaryCall<global::Google.Bigtable.Admin.Table.V1.ListTablesResponse> ListTablesAsync(global::Google.Bigtable.Admin.Table.V1.ListTablesRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        var call = CreateCall(__Method_ListTables, new CallOptions(headers, deadline, cancellationToken));
        return Calls.AsyncUnaryCall(call, request);
      }
      public AsyncUnaryCall<global::Google.Bigtable.Admin.Table.V1.ListTablesResponse> ListTablesAsync(global::Google.Bigtable.Admin.Table.V1.ListTablesRequest request, CallOptions options)
      {
        var call = CreateCall(__Method_ListTables, options);
        return Calls.AsyncUnaryCall(call, request);
      }
      public global::Google.Bigtable.Admin.Table.V1.Table GetTable(global::Google.Bigtable.Admin.Table.V1.GetTableRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        var call = CreateCall(__Method_GetTable, new CallOptions(headers, deadline, cancellationToken));
        return Calls.BlockingUnaryCall(call, request);
      }
      public global::Google.Bigtable.Admin.Table.V1.Table GetTable(global::Google.Bigtable.Admin.Table.V1.GetTableRequest request, CallOptions options)
      {
        var call = CreateCall(__Method_GetTable, options);
        return Calls.BlockingUnaryCall(call, request);
      }
      public AsyncUnaryCall<global::Google.Bigtable.Admin.Table.V1.Table> GetTableAsync(global::Google.Bigtable.Admin.Table.V1.GetTableRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        var call = CreateCall(__Method_GetTable, new CallOptions(headers, deadline, cancellationToken));
        return Calls.AsyncUnaryCall(call, request);
      }
      public AsyncUnaryCall<global::Google.Bigtable.Admin.Table.V1.Table> GetTableAsync(global::Google.Bigtable.Admin.Table.V1.GetTableRequest request, CallOptions options)
      {
        var call = CreateCall(__Method_GetTable, options);
        return Calls.AsyncUnaryCall(call, request);
      }
      public global::Google.Protobuf.Empty DeleteTable(global::Google.Bigtable.Admin.Table.V1.DeleteTableRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        var call = CreateCall(__Method_DeleteTable, new CallOptions(headers, deadline, cancellationToken));
        return Calls.BlockingUnaryCall(call, request);
      }
      public global::Google.Protobuf.Empty DeleteTable(global::Google.Bigtable.Admin.Table.V1.DeleteTableRequest request, CallOptions options)
      {
        var call = CreateCall(__Method_DeleteTable, options);
        return Calls.BlockingUnaryCall(call, request);
      }
      public AsyncUnaryCall<global::Google.Protobuf.Empty> DeleteTableAsync(global::Google.Bigtable.Admin.Table.V1.DeleteTableRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        var call = CreateCall(__Method_DeleteTable, new CallOptions(headers, deadline, cancellationToken));
        return Calls.AsyncUnaryCall(call, request);
      }
      public AsyncUnaryCall<global::Google.Protobuf.Empty> DeleteTableAsync(global::Google.Bigtable.Admin.Table.V1.DeleteTableRequest request, CallOptions options)
      {
        var call = CreateCall(__Method_DeleteTable, options);
        return Calls.AsyncUnaryCall(call, request);
      }
      public global::Google.Protobuf.Empty RenameTable(global::Google.Bigtable.Admin.Table.V1.RenameTableRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        var call = CreateCall(__Method_RenameTable, new CallOptions(headers, deadline, cancellationToken));
        return Calls.BlockingUnaryCall(call, request);
      }
      public global::Google.Protobuf.Empty RenameTable(global::Google.Bigtable.Admin.Table.V1.RenameTableRequest request, CallOptions options)
      {
        var call = CreateCall(__Method_RenameTable, options);
        return Calls.BlockingUnaryCall(call, request);
      }
      public AsyncUnaryCall<global::Google.Protobuf.Empty> RenameTableAsync(global::Google.Bigtable.Admin.Table.V1.RenameTableRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        var call = CreateCall(__Method_RenameTable, new CallOptions(headers, deadline, cancellationToken));
        return Calls.AsyncUnaryCall(call, request);
      }
      public AsyncUnaryCall<global::Google.Protobuf.Empty> RenameTableAsync(global::Google.Bigtable.Admin.Table.V1.RenameTableRequest request, CallOptions options)
      {
        var call = CreateCall(__Method_RenameTable, options);
        return Calls.AsyncUnaryCall(call, request);
      }
      public global::Google.Bigtable.Admin.Table.V1.ColumnFamily CreateColumnFamily(global::Google.Bigtable.Admin.Table.V1.CreateColumnFamilyRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        var call = CreateCall(__Method_CreateColumnFamily, new CallOptions(headers, deadline, cancellationToken));
        return Calls.BlockingUnaryCall(call, request);
      }
      public global::Google.Bigtable.Admin.Table.V1.ColumnFamily CreateColumnFamily(global::Google.Bigtable.Admin.Table.V1.CreateColumnFamilyRequest request, CallOptions options)
      {
        var call = CreateCall(__Method_CreateColumnFamily, options);
        return Calls.BlockingUnaryCall(call, request);
      }
      public AsyncUnaryCall<global::Google.Bigtable.Admin.Table.V1.ColumnFamily> CreateColumnFamilyAsync(global::Google.Bigtable.Admin.Table.V1.CreateColumnFamilyRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        var call = CreateCall(__Method_CreateColumnFamily, new CallOptions(headers, deadline, cancellationToken));
        return Calls.AsyncUnaryCall(call, request);
      }
      public AsyncUnaryCall<global::Google.Bigtable.Admin.Table.V1.ColumnFamily> CreateColumnFamilyAsync(global::Google.Bigtable.Admin.Table.V1.CreateColumnFamilyRequest request, CallOptions options)
      {
        var call = CreateCall(__Method_CreateColumnFamily, options);
        return Calls.AsyncUnaryCall(call, request);
      }
      public global::Google.Bigtable.Admin.Table.V1.ColumnFamily UpdateColumnFamily(global::Google.Bigtable.Admin.Table.V1.ColumnFamily request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        var call = CreateCall(__Method_UpdateColumnFamily, new CallOptions(headers, deadline, cancellationToken));
        return Calls.BlockingUnaryCall(call, request);
      }
      public global::Google.Bigtable.Admin.Table.V1.ColumnFamily UpdateColumnFamily(global::Google.Bigtable.Admin.Table.V1.ColumnFamily request, CallOptions options)
      {
        var call = CreateCall(__Method_UpdateColumnFamily, options);
        return Calls.BlockingUnaryCall(call, request);
      }
      public AsyncUnaryCall<global::Google.Bigtable.Admin.Table.V1.ColumnFamily> UpdateColumnFamilyAsync(global::Google.Bigtable.Admin.Table.V1.ColumnFamily request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        var call = CreateCall(__Method_UpdateColumnFamily, new CallOptions(headers, deadline, cancellationToken));
        return Calls.AsyncUnaryCall(call, request);
      }
      public AsyncUnaryCall<global::Google.Bigtable.Admin.Table.V1.ColumnFamily> UpdateColumnFamilyAsync(global::Google.Bigtable.Admin.Table.V1.ColumnFamily request, CallOptions options)
      {
        var call = CreateCall(__Method_UpdateColumnFamily, options);
        return Calls.AsyncUnaryCall(call, request);
      }
      public global::Google.Protobuf.Empty DeleteColumnFamily(global::Google.Bigtable.Admin.Table.V1.DeleteColumnFamilyRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        var call = CreateCall(__Method_DeleteColumnFamily, new CallOptions(headers, deadline, cancellationToken));
        return Calls.BlockingUnaryCall(call, request);
      }
      public global::Google.Protobuf.Empty DeleteColumnFamily(global::Google.Bigtable.Admin.Table.V1.DeleteColumnFamilyRequest request, CallOptions options)
      {
        var call = CreateCall(__Method_DeleteColumnFamily, options);
        return Calls.BlockingUnaryCall(call, request);
      }
      public AsyncUnaryCall<global::Google.Protobuf.Empty> DeleteColumnFamilyAsync(global::Google.Bigtable.Admin.Table.V1.DeleteColumnFamilyRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        var call = CreateCall(__Method_DeleteColumnFamily, new CallOptions(headers, deadline, cancellationToken));
        return Calls.AsyncUnaryCall(call, request);
      }
      public AsyncUnaryCall<global::Google.Protobuf.Empty> DeleteColumnFamilyAsync(global::Google.Bigtable.Admin.Table.V1.DeleteColumnFamilyRequest request, CallOptions options)
      {
        var call = CreateCall(__Method_DeleteColumnFamily, options);
        return Calls.AsyncUnaryCall(call, request);
      }
    }

    // creates service definition that can be registered with a server
    public static ServerServiceDefinition BindService(IBigtableTableService serviceImpl)
    {
      return ServerServiceDefinition.CreateBuilder(__ServiceName)
          .AddMethod(__Method_CreateTable, serviceImpl.CreateTable)
          .AddMethod(__Method_ListTables, serviceImpl.ListTables)
          .AddMethod(__Method_GetTable, serviceImpl.GetTable)
          .AddMethod(__Method_DeleteTable, serviceImpl.DeleteTable)
          .AddMethod(__Method_RenameTable, serviceImpl.RenameTable)
          .AddMethod(__Method_CreateColumnFamily, serviceImpl.CreateColumnFamily)
          .AddMethod(__Method_UpdateColumnFamily, serviceImpl.UpdateColumnFamily)
          .AddMethod(__Method_DeleteColumnFamily, serviceImpl.DeleteColumnFamily).Build();
    }

    // creates a new client
    public static BigtableTableServiceClient NewClient(Channel channel)
    {
      return new BigtableTableServiceClient(channel);
    }

  }
}
#endregion
